{
  "Uuid": "5b1af729-a757-4a1a-b295-ed8c7a969514",
  "IsCustomNode": true,
  "Category": "Zach.Customised",
  "Description": "Return the view types of views, while maintaining original data structure",
  "Name": "View.Type",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "View.Type": {
        "Key": "Revit.Elements.Views.View",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference('DSCoreNodes')\r\nimport DSCore\r\n\r\n\r\nflat_list_input = DSCore.List.Flatten(IN[0],-1)\r\n\r\n\r\nview_names = []\r\nunwrap_flat_list = UnwrapElement(flat_list_input)\r\nfor view in unwrap_flat_list:\r\n\tvt = view.ViewType\r\n\tview_names.append(vt)\r\n\t\r\n\r\ndef recCount(_lists,c):\r\n\tfor _list in _lists:\r\n\t\tif isinstance(_list,list):\r\n\t\t\tc = recCount(_list,c)\r\n\t\telse:\r\n\t\t\tc += 1\r\n\treturn c\r\n\r\ndef recMatch(_list,_matches,_out,c):\r\n\tfor _match in _matches:\r\n\t\tif isinstance(_match,list):\r\n\t\t\toutTemp, c = recMatch(_list,_match,[],c)\r\n\t\t\t_out.append(outTemp)\r\n\t\telse:\r\n\t\t\t_out.append(_list[c])\r\n\t\t\tc += 1\r\n\treturn _out, c\r\n\t\t\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\nmList = view_names\r\ntoMatch = IN[0]\r\noutList = []\r\nc = 0\r\nmC = 0\r\nif len(mList) == recCount(toMatch,c):\r\n\tOUT = recMatch(mList,toMatch,outList,mC)[0]\r\nelse:\r\n\tOUT = [\"List lengths do not match.\",\"IN[0] length = \"+ str(len(mList)), \"IN[1] length = \" + str(recCount(toMatch,c))]\r\n",
      "VariableInputPorts": true,
      "Id": "a4f8ff9701c94918adb1b0226a81fcc2",
      "Inputs": [
        {
          "Id": "92f4dfd993cb4fb9af6bc03691bf3da7",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9ff6a75541494111b1eb14dc73ebb105",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded IronPython script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Symbol, DynamoCore",
      "NodeType": "InputNode",
      "Parameter": {
        "Name": "View",
        "TypeName": "var",
        "TypeRank": -1,
        "DefaultValue": null,
        "Description": ""
      },
      "Id": "5c7a88e00c8e4c9f94010599233f3627",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "94b0f2dd737247da9312028c5f66be4b",
          "Name": "",
          "Description": "Symbol",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "A function parameter, use with custom nodes.\r\n\r\nYou can specify the type and default value for parameter. E.g.,\r\n\r\ninput : var[]..[]\r\nvalue : bool = false"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Output, DynamoCore",
      "NodeType": "OutputNode",
      "ElementResolver": null,
      "Symbol": "View.Type",
      "Id": "20f3512c30d94311b0fb335c6415e1e0",
      "Inputs": [
        {
          "Id": "e05b68f77be34f81853fd3febd58a0f5",
          "Name": "",
          "Description": "",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "A function output, use with custom nodes"
    }
  ],
  "Connectors": [
    {
      "Start": "9ff6a75541494111b1eb14dc73ebb105",
      "End": "e05b68f77be34f81853fd3febd58a0f5",
      "Id": "fd53c890a9ee49eab6bad69f5cecaa68"
    },
    {
      "Start": "94b0f2dd737247da9312028c5f66be4b",
      "End": "92f4dfd993cb4fb9af6bc03691bf3da7",
      "Id": "77a364bc6b554e2a9e6e768cd3457a0c"
    }
  ],
  "Dependencies": [],
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": false,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.0.2.6826",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": 47.956174617751259,
      "EyeY": 53.652758965621722,
      "EyeZ": 75.828013493086971,
      "LookX": -47.956174617751259,
      "LookY": -53.652758965621722,
      "LookZ": -75.828013493086971,
      "UpX": -0.16960224933026913,
      "UpY": 0.9483236552062,
      "UpZ": -0.268174051687457
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Return View Types while Maintaining Data Structure",
        "Id": "a4f8ff9701c94918adb1b0226a81fcc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 241.44983041130683,
        "Y": 7.42866271126595
      },
      {
        "ShowGeometry": true,
        "Name": "Input",
        "Id": "5c7a88e00c8e4c9f94010599233f3627",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 78.449830411306834,
        "Y": 7.42866271126595
      },
      {
        "ShowGeometry": true,
        "Name": "Output",
        "Id": "20f3512c30d94311b0fb335c6415e1e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 678.44983041130683,
        "Y": 7.42866271126595
      }
    ],
    "Annotations": [],
    "X": 207.23618469021758,
    "Y": 342.69451967312762,
    "Zoom": 0.5552721194459993
  }
}
